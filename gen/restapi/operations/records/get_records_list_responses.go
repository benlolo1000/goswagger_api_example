// Code generated by go-swagger; DO NOT EDIT.

package records

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "medicarePartD/gen/models"
)

// GetRecordsListOKCode is the HTTP code returned for type GetRecordsListOK
const GetRecordsListOKCode int = 200

/*GetRecordsListOK A JSON object containing an array of records

swagger:response getRecordsListOK
*/
type GetRecordsListOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Records `json:"body,omitempty"`
}

// NewGetRecordsListOK creates GetRecordsListOK with default headers values
func NewGetRecordsListOK() *GetRecordsListOK {

	return &GetRecordsListOK{}
}

// WithPayload adds the payload to the get records list o k response
func (o *GetRecordsListOK) WithPayload(payload []*models.Records) *GetRecordsListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get records list o k response
func (o *GetRecordsListOK) SetPayload(payload []*models.Records) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordsListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Records, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetRecordsListForbiddenCode is the HTTP code returned for type GetRecordsListForbidden
const GetRecordsListForbiddenCode int = 403

/*GetRecordsListForbidden Forbidden Error

swagger:response getRecordsListForbidden
*/
type GetRecordsListForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseCode `json:"body,omitempty"`
}

// NewGetRecordsListForbidden creates GetRecordsListForbidden with default headers values
func NewGetRecordsListForbidden() *GetRecordsListForbidden {

	return &GetRecordsListForbidden{}
}

// WithPayload adds the payload to the get records list forbidden response
func (o *GetRecordsListForbidden) WithPayload(payload *models.ResponseCode) *GetRecordsListForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get records list forbidden response
func (o *GetRecordsListForbidden) SetPayload(payload *models.ResponseCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordsListForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRecordsListNotFoundCode is the HTTP code returned for type GetRecordsListNotFound
const GetRecordsListNotFoundCode int = 404

/*GetRecordsListNotFound Not Found

swagger:response getRecordsListNotFound
*/
type GetRecordsListNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseCode `json:"body,omitempty"`
}

// NewGetRecordsListNotFound creates GetRecordsListNotFound with default headers values
func NewGetRecordsListNotFound() *GetRecordsListNotFound {

	return &GetRecordsListNotFound{}
}

// WithPayload adds the payload to the get records list not found response
func (o *GetRecordsListNotFound) WithPayload(payload *models.ResponseCode) *GetRecordsListNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get records list not found response
func (o *GetRecordsListNotFound) SetPayload(payload *models.ResponseCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordsListNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRecordsListInternalServerErrorCode is the HTTP code returned for type GetRecordsListInternalServerError
const GetRecordsListInternalServerErrorCode int = 500

/*GetRecordsListInternalServerError Internal Server Error

swagger:response getRecordsListInternalServerError
*/
type GetRecordsListInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseCode `json:"body,omitempty"`
}

// NewGetRecordsListInternalServerError creates GetRecordsListInternalServerError with default headers values
func NewGetRecordsListInternalServerError() *GetRecordsListInternalServerError {

	return &GetRecordsListInternalServerError{}
}

// WithPayload adds the payload to the get records list internal server error response
func (o *GetRecordsListInternalServerError) WithPayload(payload *models.ResponseCode) *GetRecordsListInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get records list internal server error response
func (o *GetRecordsListInternalServerError) SetPayload(payload *models.ResponseCode) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRecordsListInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
